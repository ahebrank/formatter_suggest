<?php

/**
 * @file
 * Set template suggestions with a field formatter
 */
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\Component\Utility\Xss;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function formatter_suggest_field_formatter_settings_summary_alter(&$summary, $context) {

  $setting = $context['formatter']->getThirdPartySetting('formatter_suggest', 'suggestion');

  if (!empty($setting)) {
    $summary[] = t('Template suffix: @suggestion', ['@suggestion' => Xss::filter($setting, [])]);
  }
}

/**
 * Implements hook_field_formatter_third_party_settings_form().
 *
 * Adds a 'suggestion' textfield to all formatters.
 */
function formatter_suggest_field_formatter_third_party_settings_form(\Drupal\Core\Field\FormatterInterface $plugin, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, $view_mode, $form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $element['suggestion'] = [
    '#type' => 'textfield',
    '#title' => t('Template suggestion suffix'),
    '#default_value' => $plugin->getThirdPartySetting('formatter_suggest', 'suggestion'),
    '#attributes' => [
      'placeholder' => 'example_variation',
    ],
  ];
  return $element;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for field templates.
 *
 * Adds template suggestions according to the field formatter settings.
 */
function formatter_suggest_theme_suggestions_field_alter(&$suggestions, $variables) {

  // Get a few convenient handles.
  $entity      = $variables['element']['#object'];
  $field_name  = $variables['element']['#field_name'];
  $view_mode   = $variables['element']['#view_mode'];

  // Drill down to field formatter settings.
  $render_display = EntityViewDisplay::collectRenderDisplay($entity, $view_mode);
  $field_display = $render_display->getComponent($field_name);

  // Add the suggestion
  if (isset($field_display['third_party_settings']['formatter_suggest'])) {
    $suggestion_suffix = Xss::filter($field_display['third_party_settings']['formatter_suggest']['suggestion']);
    $suggestion_suffix = str_replace('-', '_', $suggestion_suffix);
    
    if (!empty($suggestion_suffix)) {
      $appended_suggestions = [];
      foreach ($suggestions as $original_suggestion) {
        $appended_suggestions[] = sprintf('%s__%s', $original_suggestion, $suggestion_suffix);
      }
      $suggestions = array_merge($suggestions, $appended_suggestions);
    }
  }
}
